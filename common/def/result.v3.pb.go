// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.26.1
// source: common/def/result.v3.proto

package def

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code 为本次接口的调用结果，后续将使用统一的 StatusCode 管理所有状态码, 当前版本的 code 将统一从 StatusCode 的 Number 获取
	Code       int32             `protobuf:"varint,9001,opt,name=code,proto3" json:"code,omitempty"`
	Reason     string            `protobuf:"bytes,9002,opt,name=reason,proto3" json:"reason,omitempty"`                                                                                                             // reason 为 code 对应的英文编码，可用于快速定位问题
	Message    string            `protobuf:"bytes,9003,opt,name=message,proto3" json:"message,omitempty"`                                                                                                           // message 为接口调用出错时的具体错误信息
	Identity   string            `protobuf:"bytes,9004,opt,name=identity,proto3" json:"identity,omitempty"`                                                                                                         // identity 为本次调用的通用结果，如某些接口调用后只需返回一个 Id 或标识符，则可使用该字段携带信息
	TraceId    string            `protobuf:"bytes,9005,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`                                                                                            // trace_id 为本次调用的链路 Id，可用于整合所有本次调用相关的线索
	ErrorChain string            `protobuf:"bytes,9006,opt,name=error_chain,json=errorChain,proto3" json:"error_chain,omitempty"`                                                                                   // error_chain 如果错误经过了多层业务的封装，则可以从该字段得到每一层的错误信息
	MetaData   map[string]string `protobuf:"bytes,9007,rep,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // meta_data 为附加的元数据，可用于在发生错误时提供更详细的信息
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_def_result_v3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_common_def_result_v3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_common_def_result_v3_proto_rawDescGZIP(), []int{0}
}

func (x *Result) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Result) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Result) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Result) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *Result) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *Result) GetErrorChain() string {
	if x != nil {
		return x.ErrorChain
	}
	return ""
}

func (x *Result) GetMetaData() map[string]string {
	if x != nil {
		return x.MetaData
	}
	return nil
}

var File_common_def_result_v3_proto protoreflect.FileDescriptor

var file_common_def_result_v3_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64, 0x65, 0x66, 0x2f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x2e, 0x76, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6b, 0x69,
	0x74, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x13, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0xa9, 0x46, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0xaa,
	0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xab, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0xac, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0xad, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x18, 0xae, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x48, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0xaf, 0x46, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x69, 0x74, 0x2e, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x64, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2d, 0x62, 0x69, 0x7a, 0x2d, 0x6b, 0x69, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x64, 0x65, 0x66, 0x3b, 0x64, 0x65, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_def_result_v3_proto_rawDescOnce sync.Once
	file_common_def_result_v3_proto_rawDescData = file_common_def_result_v3_proto_rawDesc
)

func file_common_def_result_v3_proto_rawDescGZIP() []byte {
	file_common_def_result_v3_proto_rawDescOnce.Do(func() {
		file_common_def_result_v3_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_def_result_v3_proto_rawDescData)
	})
	return file_common_def_result_v3_proto_rawDescData
}

var file_common_def_result_v3_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_common_def_result_v3_proto_goTypes = []interface{}{
	(*Result)(nil), // 0: kit.default.configv1.Result
	nil,            // 1: kit.default.configv1.Result.MetaDataEntry
}
var file_common_def_result_v3_proto_depIdxs = []int32{
	1, // 0: kit.default.configv1.Result.meta_data:type_name -> kit.default.configv1.Result.MetaDataEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_common_def_result_v3_proto_init() }
func file_common_def_result_v3_proto_init() {
	if File_common_def_result_v3_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_def_result_v3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_def_result_v3_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_def_result_v3_proto_goTypes,
		DependencyIndexes: file_common_def_result_v3_proto_depIdxs,
		MessageInfos:      file_common_def_result_v3_proto_msgTypes,
	}.Build()
	File_common_def_result_v3_proto = out.File
	file_common_def_result_v3_proto_rawDesc = nil
	file_common_def_result_v3_proto_goTypes = nil
	file_common_def_result_v3_proto_depIdxs = nil
}
